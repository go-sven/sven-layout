// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"github.com/gin-gonic/gin"
	"github/go-sven/sven-layout/app/conf"
	"github/go-sven/sven-layout/app/data"
	"github/go-sven/sven-layout/app/handler/index"
	"github/go-sven/sven-layout/app/server/demo/cache"
	"github/go-sven/sven-layout/app/server/demo/repository"
	"github/go-sven/sven-layout/app/server/demo/service"
	"github/go-sven/sven-layout/app/server/demo/usecase"
	"github/go-sven/sven-layout/router"
)

// Injectors from wire.go:

func wireApp(config *conf.Config) (*gin.Engine, error) {
	mysqlConfig := conf.NewMysqlConfig(config)
	db, err := data.NewDb(mysqlConfig)
	if err != nil {
		return nil, err
	}
	transact := data.NewTract(db)
	demoRepo := repository.NewDemoRepo(db, transact)
	demoExtraRepo := repository.NewDemoExtraRepo(db, transact)
	transaction := data.NewTransaction(transact)
	redisConfig := conf.NewRedisConfig(config)
	client := data.NewRdb(redisConfig)
	demoCache := cache.NewDemoCache(client)
	demoUseCase := usecase.NewDemoUseCase(demoRepo, demoExtraRepo, transaction, demoCache)
	demoService := service.NewDemoService(demoUseCase)
	demoHandler := index.NewDemoHandler(demoService)
	routerRouter := &router.Router{
		IndexDemo: demoHandler,
	}
	engine := initEngine(routerRouter)
	return engine, nil
}
